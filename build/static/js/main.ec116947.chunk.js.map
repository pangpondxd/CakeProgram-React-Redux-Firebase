{"version":3,"sources":["assets/images/dukdui.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToToggle/DrawerToToggle.js","components/Navigation/Toolbar/Toolbar.js","hoc/Aux/Aux.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Cake/CakeIngredient/CakeIngredient.js","components/Cake/Cake.js","components/Cake/BuildControls/BuildControl/BuildControl.js","components/Cake/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Cake/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","containers/CakeBuilder/CakeBuilder.js","store/actions/cakeBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Orders/Auth/Auth.js","containers/Orders/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/cakeBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","Logo","props","className","style","height","src","cakeLogo","alt","NavigationItem","to","link","exact","activeClassName","children","NavigationItems","isAuthenticated","DrawerToggle","onClick","clicked","Toolbar","drawerToggleClicked","isAuth","aux","Backdrop","show","SideDrawer","attachedClasses","open","Aux","closed","join","connect","state","auth","token","useState","sideDrawerIsVisible","setsideDrawerIsVisible","CakeIngredient","ingredient","type","Cake","console","log","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","ctrl","BuildControl","ingredientAdded","ingredientRemoved","ordered","purchasable","React","memo","modalClosed","transform","opacity","prevProps","nextProps","Button","btnType","OrderSummary","ingredientSummary","textTransform","toFixed","purchaseCanceled","purchaseContinued","Spinner","withErrorHandler","WrappedComponent","axios","error","setError","reqInterceptors","interceptors","request","use","req","resInterceptors","response","res","err","useEffect","eject","message","instance","create","baseURL","authSuccess","userId","idToken","checkAuthTimeout","expirationTime","dispatch","setTimeout","logout","localStorage","removeItem","setAuthRedirectPath","path","ings","cakeBuilder","totalPrice","onIngredientAdded","ingName","ingredientName","onIngredientRemoved","onInitIngredients","get","then","data","catch","onInitPurchase","onSetRedirectPath","cakeBuilderActions","purchasing","setPurchasing","purchaseCancelHandler","disabledInfo","orderSummary","cake","sum","history","push","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","elementConfig","value","onChange","changed","options","option","displayValue","loading","order","onOrderCake","orderData","post","id","orderId","purchaseCakeSuccess","name","purchaseCakeFail","actions","placeholder","validation","required","valid","street","country","zipcode","equalLength","maxLength","email","telephone","minLengthPhone","maxLengthPhone","landmark","deliveryMethod","orderForm","setOrderForm","formIsValid","setFormIsValid","checkValidility","rules","isValid","trim","minLength","formElementsArray","config","form","onSubmit","event","preventDefault","formData","formElementIdentifier","formElement","inputIdentifier","updatedOrderForm","updatedFormElement","target","inputChangeHandler","purchased","summary","purchasedRedirect","goBack","replace","match","component","ContactData","amount","ingredientOutput","ig","display","border","padding","Number","parseFloat","orders","onFetchOrders","fetchedOrders","buildingCake","building","authRedirectPath","onAuth","password","isSignup","isSignUp","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","onSetAuthRedirectPath","isEmail","authForm","setAuthForm","setIsSignup","controlName","updatedControls","errorMessage","authRedirect","onLogout","withRouter","onTryAutoSignup","getItem","Checkout","Orders","Auth","Logout","CakeBuilder","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","chocolate","strawberry","blueberry","vanilla","lemon","orange","addIngredient","action","updatedIngredient","updatedState","removeIngredient","removeUpdatedIngredient","removeUpdatedState","setIngredient","fetchIngredient","reducer","purchaseInit","purchaseCakeStart","newOrder","fetchOrderStart","fetchOrderSuccess","fetchOrderFail","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","cakeBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec116947.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dukdui.771b57cc.png\";","import React from 'react'\nimport cakeLogo from '../../assets/images/dukdui.png'\nimport './Logo.css'\nconst Logo = (props) => (\n    <div className=\"Logo\" style={{height: props.height}}>\n        <img src={cakeLogo} alt=\"myDukdui\" />\n    </div>\n)\n\nexport default Logo","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport './NavigationItem.css'\nconst NavigationItem = (props) => (\n    <li className=\"NavigationItem\">\n        <NavLink \n        to={props.link}\n        exact\n        activeClassName=\"active\"\n        > {props.children} </NavLink>\n       \n    </li>\n)\n\nexport default NavigationItem","import React from 'react'\nimport NavigationItem from './NavigationItem/NavigationItem'\nimport './NavigationItems.css'\nconst NavigationItems = (props) => (\n    <ul className=\"NavigationItems\">\n       <NavigationItem link=\"/\" exact>Cake Builder</NavigationItem>\n       { props.isAuthenticated \n       ? <NavigationItem link=\"/orders\">Orders</NavigationItem> \n       : null }\n       { !props.isAuthenticated \n       ? <NavigationItem link=\"/auth\">SIGNIN</NavigationItem>\n       :  <NavigationItem link=\"/logout\">SIGNOUT</NavigationItem>\n       }\n    </ul>\n)\n\nexport default NavigationItems","import React from 'react'\nimport './DrawerToToggle.css'\nconst DrawerToggle = (props) => (\n    <div className=\"DrawerToggle\" onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n)\n\nexport default DrawerToggle","import React from 'react'\nimport './Toolbar.css'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport DrawerToggle from '../SideDrawer/DrawerToToggle/DrawerToToggle'\nconst Toolbar = (props) => (\n    <header className=\"Toolbar\">\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <Logo height=\"80%\" />\n        <nav className=\"DestopOnly\">\n            <NavigationItems isAuthenticated={props.isAuth} />\n        </nav>\n    </header>\n)\n\nexport default Toolbar","const aux = (props) => props.children;\n\nexport default aux","import React from 'react'\nimport './Backdrop.css'\nconst Backdrop = (props) => (\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\n)\n\nexport default Backdrop","import React from 'react'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport './SideDrawer.css'\nimport Backdrop from '../../UI/Backdrop/Backdrop'\nimport Aux from '../../../hoc/Aux/Aux'\nconst SideDrawer = (props) => {\n   let attachedClasses = [\"SideDrawer\", \"Close\"]\n   if(props.open) {\n       attachedClasses = [\"SideDrawer\", \"Open\"]\n   }\n    return(\n        <Aux>\n        <Backdrop show={props.open} clicked={props.closed}/>\n        <div className={attachedClasses.join(' ')}>\n            <Logo height=\"20%\"/>\n            <nav>\n                <NavigationItems isAuthenticated={props.isAuth} />\n            </nav>\n            \n        </div>\n        </Aux>\n    );\n}\nexport default SideDrawer","import React, { useState } from \"react\";\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\nimport Aux from \"../Aux/Aux\";\nimport \"./Layout.css\";\nimport { connect } from 'react-redux'\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\nconst Layout = props => {\n  const [sideDrawerIsVisible, setsideDrawerIsVisible] = useState(false)\n  const sideDrawerClosedHandle = () => {\n    setsideDrawerIsVisible(false)\n  };\n  const sideDrawerToggleHandle = () => {\n    setsideDrawerIsVisible(!sideDrawerIsVisible)\n  };\n    return (\n      <Aux>\n        <Toolbar \n        isAuth={props.isAuthenticated}\n        drawerToggleClicked={sideDrawerToggleHandle} />\n        <SideDrawer\n        isAuth={props.isAuthenticated}\n          open={sideDrawerIsVisible}\n          closed={sideDrawerClosedHandle}\n        />\n        <main className=\"Content\">{props.children}</main>\n      </Aux>\n    );\n}\n\nconst mapStateToProps = state => {\n  return  {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nexport default connect(mapStateToProps)(Layout);\n","import React, { Component } from 'react';\nimport './CakeIngredient.css';\nimport PropTypes from 'prop-types';\nconst  CakeIngredient = props => {\n    let ingredient = null;\n\n    switch (props.type) {\n        case ('cake-bottom'):\n        ingredient = <div className=\"CakeBottom\"><h3 className=\"FontBase\">CAKE's BASE</h3></div>;\n        break;\n        case ('cake-top'):\n        ingredient = (\n            <div className=\"CookieTop\">\n            <h3 className=\"TopCake\">DECORATE THE CAKE </h3>\n            <div className=\"Cream1\" />\n            <div className=\"Cream2\" />\n            </div>\n        );\n        break;\n        case('chocolate'):\n        ingredient = <div className=\"Chocolate\" /> ;\n        break;\n        case('strawberry'):\n        ingredient = <div className=\"Strawberry\" />;\n        break;\n        case('blueberry'):\n        ingredient = <div className=\"Blueberry\" />;\n        break;\n        case('vanilla'):\n        ingredient = <div className=\"Vanilla\" />;\n        break;\n        case('lemon'):\n        ingredient = <div className=\"Lemon\" />;\n        break;\n        case('orange'):\n        ingredient = <div className=\"Orange\" />;\n        break;\n        default:\n            ingredient = null;\n    }\n    return ingredient;\n}\nCakeIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\nexport default CakeIngredient;","import React from \"react\";\nimport \"./Cake.css\";\nimport CakeIngredient from \"./CakeIngredient/CakeIngredient\";\nconst Cake = props => {\n  console.log(props)\n  let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\n        return <CakeIngredient key={igKey + i} type={igKey} />;\n      });\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = <div>Please start adding ingredients</div>;\n  }\n  return (\n    <div className=\"Cookie\">\n      <CakeIngredient type=\"cake-top\" />\n      {transformedIngredients}\n      <CakeIngredient type=\"cake-bottom\" />\n    </div>\n  );\n};\n\nexport default Cake;\n","import React from 'react'\nimport './Buildcontrol.css'\nconst buildControl = (props) => (\n    <div className=\"BuildControl\">\n        <div className=\"Label\">{props.label}</div>\n        <button className=\"Less\" onClick={props.removed} disabled={props.disabled}>Less</button>\n        <button className=\"More\" onClick={props.added} >More</button>\n      \n        \n    </div>\n);\n\nexport default buildControl","import React from 'react';\nimport './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl';\nconst controls = [\n    {label: 'Chocolate', type: 'chocolate'},\n    {label: 'Strawberry', type: 'strawberry'},\n    {label: 'Blueberry', type: 'blueberry'},\n    {label: 'Vanilla', type: 'vanilla'},\n    {label: 'Lemon', type: 'lemon'},\n    {label: 'Orange', type: 'orange'},\n];\nconst buildControls = (props) => (\n    <div className=\"BuildControls\">\n        <p>Current Price: {props.price}</p>\n       {controls.map(ctrl => (\n           <BuildControl \n           key={ctrl.label} \n           label={ctrl.label} \n           added={() => props.ingredientAdded(ctrl.type)}\n           removed={() => props.ingredientRemoved(ctrl.type)}\n           disabled={props.disabled[ctrl.type]}\n           />\n       ))}\n       <button \n       className=\"OrderButton\"\n       onClick={props.ordered}\n       disabled={!props.purchasable}>{props.isAuth ? 'ORDER NOW' : 'SIGNUP TO ORDER'}</button>\n    </div>\n)\nexport default buildControls","import React, {Component} from 'react'\nimport './Modal.css'\nimport Aux from '../../../hoc/Aux/Aux'\nimport Backdrop from '../Backdrop/Backdrop';\nconst Modal = props => {\n\n    // shouldComponentUpdate(nextProps, nextState){\n    //     return nextProps.show !== props.show || nextProps.children !== props.children\n    // }\n \n    \n\n        return(\n            <Aux>\n            <Backdrop show={props.show} clicked={props.modalClosed} />\n        <div className=\"Modal\"\n        style={{\n            transform: props.show ? 'translateY(0' : 'translateY(-100vh)',\n            opacity: props.show ? '1' : '0'\n        }}>\n            {props.children}\n        </div>\n        </Aux>\n\n        )\n    }\n\nexport default React.memo(\n    Modal, (prevProps, nextProps) => \n    nextProps.show === prevProps.show && \n    nextProps.children === prevProps.children\n    );","import React from 'react'\nimport './Button.css'\n\nconst Button = (props) => (\n    <button\n    disabled={props.disabled}\n    className={[\"Button\", [props.btnType]].join(' ')}\n    onClick={props.clicked}\n>{props.children}</button>\n\n)\n\nexport default Button","import React from 'react';\nimport Aux from '../../../hoc/Aux/Aux'\nimport '../../UI/Button/Button'\nconst OrderSummary = props => {\n    // This could be a functional component,doesn't have to be a class\n        const ingredientSummary = Object.keys(props.ingredients)\n        .map(igKey => {\n            return (<li><span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}</li>)\n        })\n        return(\n             <Aux>\n            <h3>Your Order</h3>\n            <p>A good cake with the follow ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><string>Total Price : {props.price.toFixed(2)} Baht</string></p>\n            <p>Continue to Checkout?</p>\n            <button className=\"Danger\" onClick={props.purchaseCanceled}>CANCEL</button>\n            <button className=\"Success\" onClick={props.purchaseContinued}>CONTINUE</button>\n        </Aux>\n        )\n    }\n\nexport default OrderSummary","import React from 'react'\nimport './Spinner.css'\nconst Spinner = () => (\n    <div className=\"Loader\">Loading...</div>\n)\nexport default Spinner","import React, { useState, useEffect } from \"react\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport Aux from \"../Aux/Aux\";\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return props => {\n      const [error, setError] = useState(null)\n    \n\n        const reqInterceptors = axios.interceptors.request.use(req => {\n            setError(null)\n            return req\n        })\n\n        const resInterceptors = axios.interceptors.response.use(res => res, err => {\n             setError(err)\n        })\n  \n    useEffect(() => {\n      return() => {\n        axios.interceptors.request.eject(reqInterceptors)\n        axios.interceptors.response.eject(resInterceptors)\n      }\n    }, [reqInterceptors, resInterceptors]) \n        \n  \n\n    const errorComfirmedHandler = () => {\n       setError(null)\n    }\n    return (\n      <Aux>\n        <Modal \n            show={error}\n            modalClosed={errorComfirmedHandler}>\n            {error ? error.message : null}\n        </Modal>\n        <WrappedComponent {...props} />\n      </Aux>\n    );\n  };\n};\nexport default withErrorHandler;\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://jobsphuket-dfdd9.firebaseio.com/'\n})\n\nexport default instance","import * as actionTypes from './actionTypes'\nimport axios from 'axios'\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId,\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationTime * 1000)\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('expirationDate')\n    localStorage.removeItem('userId')\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const auth = (email, password, isSignUp) => {\n    return dispatch => {\n        dispatch(authStart())\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAYrApZddqQdAoWKkSV7i_JO63j4rDMBYg'\n        if(!isSignUp) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAYrApZddqQdAoWKkSV7i_JO63j4rDMBYg'\n        }\n        axios.post(url, authData)\n        .then(response => {\n            console.log(response)\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000)\n            localStorage.setItem('token', response.data.idToken)\n            localStorage.setItem('expirationDate', expirationDate)\n            localStorage.setItem('userId', response.data.localId)\n            dispatch(authSuccess(response.data.idToken, response.data.localId))\n            dispatch(checkAuthTimeout(response.data.expiresIn))\n        })\n        .catch(err => {\n            console.log(err.response.data.error)\n            dispatch(authFail(err.response.data.error))\n        })\n    }\n}\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        if(!token){\n            dispatch(logout())\n        }\n        else{\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            if(expirationDate <= new Date()){\n                dispatch(logout())\n            }\n            else {\n                const userId = localStorage.getItem('userId')\n                dispatch(authSuccess(token, userId))\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\n            }\n            \n        }\n    }\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT'\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT'\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS'\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED'\nexport const PURCHASE_CAKE_START = 'PURCHASE_CAKE_START'\nexport const PURCHASE_CAKE_SUCCESS = 'PURCHASE_CAKE_SUCCESS'\nexport const PURCHASE_INIT = 'PURCHASE_INIT'\nexport const PURCHASE_CAKE_FAIL = 'PURCHASE_CAKE_FAIL'\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START'\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS'\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL'\nexport const AUTH_START = 'AUTH_START'\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_FAIL = 'AUTH_FAIL'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH'","import React, { useState, useEffect } from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Cake from \"../../components/Cake/Cake\";\nimport BuildControls from \"../../components/Cake/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Cake/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport { connect } from 'react-redux'\nimport * as cakeBuilderActions from '../../store/actions/index'\nimport axios from '../../axios-orders'\nconst CakeBuilder = props => {\n  // constructor(props) {\n  //     super(props);\n  //     state = {...}\n  // }\n  const [ purchasing, setPurchasing] = useState(false)\n\n  useEffect(() => {\n    props.onInitIngredients()\n  }, [])\n\n  const updatePurchaseState = (ingredients) => {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n    return sum > 0\n  }\n\n  \n\n  const purchaseHandle = () => {\n    if(props.isAuthenticated){\n      setPurchasing(true)\n    }\n    else {\n      props.onSetRedirectPath('/checkout')\n      props.history.push('/auth')\n    }\n    \n  };\n\n  const purchaseCancelHandler = () => {\n    setPurchasing(false)\n  };\n\n  const purchaseContinueHandler = () => {\n    props.onInitPurchase()\n    props.history.push('/checkout')\n  };\n\n    const disabledInfo = {\n      ...props.ings\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n    let orderSummary = null;\n    \nlet cake = props.error ? <p>Ingredients can't loaded</p> : <Spinner /> ;\nif(props.ings){\n    cake = (\n        <Aux>\n          <Cake ingredients={props.ings} />\n          <BuildControls\n            ingredientAdded={props.onIngredientAdded}\n            ingredientRemoved={props.onIngredientRemoved}\n            disabled={disabledInfo}\n            price={props.price}\n            purchasable={updatePurchaseState(props.ings)}\n            ordered={purchaseHandle}\n            isAuthenticated={props.isAuthenticated}\n          />\n        </Aux>\n      );\n      orderSummary = \n        <OrderSummary\n          ingredients={props.ings}\n          price={props.price}\n          purchaseCanceled={purchaseCancelHandler}\n          purchaseContinued={purchaseContinueHandler}\n        />\n    }\n    return (\n      <Aux>\n        <Modal\n          show={purchasing}\n          modalClosed={purchaseCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {cake}\n      </Aux>\n    );\n  }\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.cakeBuilder.ingredients,\n    price: state.cakeBuilder.totalPrice,\n    error: state.cakeBuilder.error,\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: (ingName) => dispatch(cakeBuilderActions.addIngredient(ingName)),\n    onIngredientRemoved: (ingName) => dispatch(cakeBuilderActions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(cakeBuilderActions.initIngredients()),\n    onInitPurchase: () => dispatch(cakeBuilderActions.purchaseInit()),\n    onSetRedirectPath: (path) => dispatch(cakeBuilderActions.setAuthRedirectPath(path))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(CakeBuilder, axios));","import * as actionTypes from './actionTypes'\nimport axios from '../../axios-orders'\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    }\n}\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    }\n}\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    }\n}\n\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    }\n}\nexport const initIngredients = () => {\n    return dispatch => {\n        axios\n        .get(\"/ingredients.json\")\n        .then(res => {\n          dispatch(setIngredients(res.data))\n        })\n        .catch(err => {\n          dispatch(fetchIngredientsFailed())\n        });\n    }\n}","import * as actionTypes from './actionTypes'\nimport axios from '../../axios-orders'\nexport const purchaseCakeSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_CAKE_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    }\n}\n\nexport const purchaseCakeFail = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_CAKE_FAIL,\n        orderId: id,\n        orderData: orderData\n    }\n}\n\nexport const purchaseCakeStart = () => {\n    return {\n        type: actionTypes.PURCHASE_CAKE_START\n    }\n}\n\nexport const purchaseCake = (orderData) => {\n    return dispatch => {\n        dispatch(purchaseCakeStart())\n        axios\n        .post('/orders.json', orderData)\n        .then(res => {\n            console.log(res.data)\n          dispatch(purchaseCakeSuccess(res.data.name, orderData))\n        })\n        .catch(err => {\n          dispatch(purchaseCakeFail(err))\n      })\n    }\n}\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n}\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START,\n\n    }\n}\n\nexport const fetchOrders = (token) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart())\n        axios.get('/orders.json?auth=' + token)\n        .then(res => {\n            const fetchedOrders = []\n            for (let key in res.data) {\n                fetchedOrders.push({\n                    ...res.data[key],\n                    id: key\n                })\n            }\n            dispatch(fetchOrdersSuccess(fetchedOrders))\n            \n        }).catch(err => {\n            dispatch(fetchOrdersFail(err))\n        })\n    }\n}\n\n","import React from 'react';\nimport Cake from '../../Cake/Cake';\nimport Button from '../../UI/Button/Button';\nimport './CheckoutSummary.css'\nconst CheckoutSummary = (props) => {\n  return (\n    <div className=\"CheckoutSummary\">\n      <h1>We hop it tastes well!</h1>\n      <div style={{ width: '300px', height: '300px', margin: 'auto' }}>\n        <Cake ingredients={props.ingredients} />\n      </div>\n      <Button className=\"Danger\" clicked={props.checkoutCancelled}>\n        Cancel\n      </Button>\n      <Button className=\"Success\" clicked={props.checkoutContinued}>\n        Continue\n      </Button>\n    </div>\n  );\n};\n\nexport default CheckoutSummary;\n","import React from 'react'\nimport './Input.css'\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses= [\"InputElement\"]\n\n    if(props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(\"Invalid\")\n    }\n\n    switch (props.elementType) {\n        case ('input'):\n                inputElement = <input className={inputClasses.join(' ')}\n                {...props.elementConfig} \n                value={props.value} \n                onChange={props.changed}\n                />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea className={inputClasses.join(' ')}\n            {...props.elementConfig} \n            value={props.value}\n            onChange={props.changed}\n            />;\n        break;\n        case ('select'):\n            inputElement = (\n            <select\n                className={inputClasses.join(' ')} \n                value={props.value}\n                onChange={props.changed}\n                >\n                    \n                {props.elementConfig.options.map(option => (\n                <option key={option.value} value={option.value}>\n                    {option.displayValue}\n                </option>\n            ))}\n            </select>\n            );\n        break;\n        default:\n            // inputElement = <input className={inputClasses}\n            // {...props.elementConfig}  \n            // value={props.value}\n            //  />\n            console.log('Bug!!')\n    }\n    return (\n        <div className=\"Input\">\n            <label className=\"Label\">{props.label}</label>\n            {inputElement}\n        </div>\n    )\n}\n\nexport default input","import React, { useState } from 'react'\nimport Button from '../../../components/UI/Button/Button'\nimport './ContactData.css'\nimport Spinner from '../../../components/UI/Spinner/Spinner'\nimport Input from '../../../components/UI/Input/Input'\nimport { connect } from 'react-redux'\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\nimport axios from '../../../axios-orders'\nimport * as actions from '../../../store/actions/index'\nconst ContactData = props => {\n    const [orderForm, setOrderForm] = useState({\n            name: {\n              elementType: 'input',\n              elementConfig: {\n                type: 'text',\n                placeholder: 'Your Name'\n              },\n              value: '',\n              validation: {\n                required: true\n              },\n              valid: false,\n              touched: false\n            },\n              street: {\n                elementType: 'input',\n                elementConfig: {\n                  type: 'text',\n                  placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                  required: true\n                },\n                valid: false,\n                touched: false\n              },\n              country: {\n                elementType: 'input',\n                elementConfig: {\n                  type: 'text',\n                  placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                  required: true,\n                  touched: false\n                },\n                valid: false\n              },\n              zipcode: {\n                elementType: 'input',\n                elementConfig: {\n                  type: 'text',\n                  placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                  required: true,\n                  equalLength: 5,\n                  maxLength: 5\n                },\n                valid: false,\n                touched: false\n              },\n              email: {\n                elementType: 'input',\n                elementConfig: {\n                  type: 'email',\n                  placeholder: 'Your Email'\n                },\n                value: '',\n                validation: {\n                  required: true\n                },\n                valid: false,\n                touched: false\n              },\n              telephone: {\n                elementType: 'input',\n                elementConfig: {\n                  type: 'text',\n                  placeholder: 'Your Phone'\n                },\n                value: '',\n                validation: {\n                  required: true,\n                  minLengthPhone: 9,\n                  maxLengthPhone: 10\n                },\n                valid: false,\n                touched: false\n              },\n              landmark: {\n                elementType: 'input',\n                elementConfig: {\n                  type: 'text',\n                  placeholder: 'Landmark around you (Optional)'\n                },\n                value: '',\n                validation: {\n                  required: false\n                },\n                valid: true,\n                touched: true\n              },\n          deliveryMethod: {\n            elementType: 'select',\n            elementConfig: {\n              options: [\n                {value: 'fastest', displayValue: 'Fastest'},\n                {value: 'cheapest', displayValue: 'Cheapest'}\n              ]\n            },\n            validation: {\n              required: false\n            },\n            value: 'fastest' ,\n            valid: true\n          }\n          })\n          const [ formIsValid, setFormIsValid] = useState(false)\n\n    const orderHandler = (event) => {\n        event.preventDefault()\n\n        const formData = {}\n        for (let formElementIdentifier in orderForm) {\n          formData[formElementIdentifier] = orderForm[formElementIdentifier].value\n        }\n        const order = {\n        ingredients: props.ings,\n        price: props.price,\n        orderData: formData\n        }\n        props.onOrderCake(order)\n        \n      }\n  const inputChangeHandler = (event, inputIdentifier) => {\n    const updatedOrderForm = {\n      ...orderForm\n    }\n    const updatedFormElement = { \n      ...updatedOrderForm[inputIdentifier]\n    }\n    updatedFormElement.value = event.target.value\n    updatedFormElement.valid = checkValidility(updatedFormElement.value, updatedFormElement.validation)\n    updatedFormElement.touched = true\n    updatedOrderForm[inputIdentifier] = updatedFormElement\n\n    let formIsValid = true;\n    for(let inputIdentifier in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\n    }\n\n    console.log(updatedFormElement)\n    setOrderForm(updatedOrderForm)\n    setFormIsValid(formIsValid)\n  }\n  const checkValidility = (value, rules) => {\n    let isValid = true\n    if(rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n    if(rules.equalLength) {\n      isValid = value.length === 5 && isValid;\n    }\n    if(rules.minLength){\n      isValid = value.length > 5 && isValid;\n    }\n    if(rules.minLengthPhone) {\n      isValid = value.length >= 9 && isValid;\n    }\n    if(rules.maxLengthPhone) {\n      isValid = value.length  <= 10 && isValid;\n    }\n    return isValid\n  }\n        const formElementsArray = []\n        for(let key in orderForm) {\n          formElementsArray.push({\n            id: key,\n            config: orderForm[key]\n          })\n        }\n        let form = (\n        <form onSubmit={orderHandler}>\n            {formElementsArray.map(formElement => (\n              <Input \n                key={formElement.id}\n                elementType = {formElement.config.elementType}\n                elementConfig = {formElement.config.elementConfig}\n                value = {formElement.config.value}\n                invalid = {!formElement.config.valid}\n                shouldValidate=  {formElement.config.validation}\n                touched= {formElement.config.touched}\n                changed = {(event) => inputChangeHandler(event, formElement.id)}\n              />\n            ))}\n            <Button disabled={!formIsValid}>ORDER</Button>\n         </form>\n        )\n        if(props.loading) {\n            form = <Spinner />\n        }\n        \n        return(\n            <div className=\"ContactData\">\n                <h4>Enter your Contact Data</h4>\n               {form}\n            </div>\n        )\n}\nconst mapStateToProps = state => {\n  return {\n    ings: state.cakeBuilder.ingredients,\n    price: state.cakeBuilder.totalPrice,\n    loading: state.order.loading\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOrderCake: (orderData) => dispatch(actions.purchaseCake(orderData))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios))","import React, { Component } from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route, Redirect } from  'react-router-dom'\nimport ContactData from '../Checkout/ContactData/ContactData'\nimport { connect } from 'react-redux'\n\nconst Checkout = props => {\n\n  const checkoutCancelledHandler = () => {\n    props.history.goBack();\n  };\n  const checkoutContinuedHandler = () => {\n    props.history.replace('/checkout/contact-data');\n  };\n\n\n    let summary = <Redirect to=\"/\" />\n    if(props.ings) {\n      const purchasedRedirect = props.purchased ? <Redirect to=\"/\" /> : null\n      summary = ( \n        <div>\n        {purchasedRedirect}\n        <CheckoutSummary \n        ingredients={props.ings} \n        checkoutCancelled={checkoutCancelledHandler}\n        checkoutContinued={checkoutContinuedHandler}\n        />\n        <Route \n            path={props.match.path + '/contact-data'} \n            component={ContactData}\n        /> \n        </div>\n        )\n    }\n    return summary\n  }\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.cakeBuilder.ingredients,\n    purchased: state.order.purchased\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from 'react'\nimport './Order.css'\nconst order = (props) => {\n    const ingredients = []\n    for (let ingredientName in props.ingredients) {\n        ingredients.push({\n            name: ingredientName, \n            amount: props.ingredients[ingredientName]\n        })\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n        style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n            }}\n        key={ig.name}>{ig.name} ({ig.amount})</span>\n    })\n\n    return (\n    <div className=\"Order\">\n        <p>Ingredients: {ingredientOutput}</p>\n        <p>Price: <strong>{Number.parseFloat(props.price).toFixed(2)} Baht</strong></p>\n    </div>\n    )\n}\nexport default order","import React, { useEffect} from 'react'\nimport Order from '../../components/Order/Order'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport * as actions from '../../store/actions/index'\nimport { connect } from 'react-redux'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nconst Orders = props => {\n\n    useEffect(()=> {\n        props.onFetchOrders(props.token)\n    }, [])\n\n\n        let orders = <Spinner />\n        if(!props.loading) {\n            orders =  props.orders.map(order => (\n                <Order \n                    key={order.id}\n                    ingredients= {order.ingredients}\n                    price= {order.price}\n                    />\n            ))\n        }\n        return (\n            <div>\n               {orders}\n            </div>\n\n        )\n        }\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token) => dispatch(actions.fetchOrders(token))\n    }\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios))","import React, {useState, useEffect} from 'react'\nimport Button from '../../../components/UI/Button/Button'\nimport Input from '../../../components/UI/Input/Input'\nimport './Auth.css'\nimport * as actions from '../../../store/actions/index'\nimport { connect } from 'react-redux'\nimport Spinner from '../../../components/UI/Spinner/Spinner'\nimport { Redirect } from 'react-router-dom'\nconst Auth = props => {\n    const [authForm, setAuthForm] = useState({\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                  type: 'email',\n                  placeholder: 'Email'\n                },\n                value: '',\n                validation: {\n                  required: true,\n                  isEmail: true\n                },\n                valid: false,\n                touched: false\n              },\n              password: {\n                elementType: 'input',\n                elementConfig: {\n                  type: 'password',\n                  placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                  required: true,\n                  minLength: 6\n                },\n                valid: false,\n                touched: false\n              }\n        })\n        const [isSignup, setIsSignup] = useState(true)\n    \n    useEffect(() => {\n      if(!props.buildingCake && props.authRedirectPath !== '/') {\n        props.onSetAuthRedirectPath()\n      }\n    }, [])\n\n    const checkValidility = (value, rules) => {\n        let isValid = true\n        if(rules.required) {\n          isValid = value.trim() !== '' && isValid;\n        }\n        if(rules.equalLength) {\n            isValid = value.length === 5 && isValid;\n          }\n        if(rules.minLength){\n            isValid = value.length > 5 && isValid;\n          }\n        if(rules.minLengthPhone) {\n          isValid = value.length >= 9 && isValid;\n        }\n        if(rules.maxLengthPhone) {\n          isValid = value.length  <= 10 && isValid;\n        }\n        return isValid\n      }\n\n      const inputChangeHandler = (event, controlName) => {\n        const updatedControls = {\n            ...authForm,\n            [controlName]: {\n                ...authForm[controlName],\n                value: event.target.value,\n                valid: checkValidility(event.target.value, authForm[controlName].validation),\n                touched: true\n            }\n        }\n        setAuthForm(updatedControls)\n      }\n\n      const submitHandler = (event) => {\n        event.preventDefault()\n        props.onAuth(authForm.email.value, authForm.password.value, isSignup)\n      }\n\n      const switchAuthModeHandler = () => {\n        setIsSignup(!isSignup)\n      }\n\n        const formElementsArray = []\n        for(let key in authForm) {\n          formElementsArray.push({\n            id: key,\n            config: authForm[key]\n          })\n        }\n        let form =  formElementsArray.map(formElement => (\n            <Input \n                key = {formElement.id}\n                elementType = {formElement.config.elementType}\n                elementConfig = {formElement.config.elementConfig}\n                value = {formElement.config.value}\n                invalid = {!formElement.config.valid}\n                shouldValidate=  {formElement.config.validation}\n                touched= {formElement.config.touched}\n                changed = {(event) => inputChangeHandler(event, formElement.id)}\n            />\n        ))\n\n            if(props.loading) {\n                form = <Spinner />\n            }\n\n\n            let errorMessage =  null\n            if(props.error) {\n                errorMessage = props.error.message\n                \n                console.log(errorMessage)\n            }\n           \n            let authRedirect = null\n            if(props.isAuthenticated) {\n              authRedirect = <Redirect to={props.authRedirectPath} />\n            }\n\n        return(\n            <div className=\"Auth\">\n               {authRedirect}\n                <p>{errorMessage}</p> \n                <form onSubmit={submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\">SUBMIT</Button>\n                </form>\n                <Button \n                    btnType=\"Danger\"\n                    clicked={switchAuthModeHandler}\n                    >SWITCH TO {isSignup ? 'SIGNIN' : 'SIGNUP'}\n                    </Button>\n            </div>\n \n        )\n    }\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null,\n        buildingCake: state.cakeBuilder.building,\n        authRedirectPath: state.auth.authRedirectPath\n}\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)","import React, { useEffect } from 'react'\nimport * as actions from '../../../../store/actions/index'\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nconst Logout = props => {\n    useEffect(() => {\n        props.onLogout()\n    }, [])\n  \n        return (\n            <Redirect to=\"/\" />\n        )\n    }\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout)","import React, {useEffect} from 'react';\nimport './index.css';\nimport Layout from './hoc/Layout/Layout'\nimport CakeBuilder from './containers/CakeBuilder/CakeBuilder'\nimport Checkout from './containers/Checkout/Checkout'\nimport { Route, Switch, withRouter } from 'react-router-dom' \nimport Orders from './containers/Orders/Orders'\nimport Auth from './containers/Orders/Auth/Auth.js'\nimport Logout from './containers/Orders/Auth/Logout/Logout'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions/index'\n\nconst App = props =>  {\n  useEffect(() => {\n    props.onTryAutoSignup()\n  }, [])\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/\" exact component={CakeBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n\n  const mapDispatchToProps = dispatch => {\n    return {\n      onTryAutoSignup: () => dispatch(actions.authCheckState())\n    }\n  }\n\nexport default withRouter(connect(null, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties,\n  };\n};\n","import * as actionTypes from '../actions/actionTypes'\nimport { updateObject } from '../utility'\nconst initialState = {\n    ingredients: null,\n    error: false,\n    totalPrice: 0,\n    building: false,\n    authRedirectPath: '/'\n}\n const INGREDIENT_PRICES = {\n    chocolate: 250,\n    strawberry: 199,\n    blueberry: 199,\n    vanilla: 199,\n    lemon: 199,\n    orange: 199\n  };\n\nconst addIngredient = (state, action) => {\n    const updatedIngredient =  { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\n            const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\n            const updatedState = {\n                ingredients: updatedIngredients,\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n                building: true\n            }\n            return updateObject(state, updatedState)\n}\n\nconst removeIngredient = (state, action) => {\n    const removeUpdatedIngredient =  { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\n            const removeUpdatedIngredients = updateObject(state.ingredients, removeUpdatedIngredient)\n            const removeUpdatedState = {\n                ingredients: removeUpdatedIngredients,\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n                building: true\n            }\n            return updateObject(state, removeUpdatedState)\n}\n\nconst setIngredient = (state, action) => {\n    return updateObject(state, {\n        ingredients: {\n            chocolate: action.ingredients.chocolate,\n            strawberry: action.ingredients.strawberry,\n            blueberry: action.ingredients.blueberry,\n            vanilla: action.ingredients.vanilla,\n            lemon: action.ingredients.lemon,\n            orange: action.ingredients.orange\n        },\n        totalPrice: 0,\n        error: false,\n        building: false\n    })\n}\n\nconst fetchIngredient = (state, action) => {\n    return updateObject(state, {error: true})\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action)\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action)\n        case actionTypes.SET_INGREDIENTS: return setIngredient(state, action)\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredient(state, action)\n        default: return state\n    }\n}\n\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\nimport { updateObject } from '../utility'\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst purchaseInit = (state, action) => {\n    return updateObject(state, {purchased: false})\n}\n\nconst purchaseCakeStart = (state, action) => {\n    return updateObject(state, {loading:true}) \n }\n\nconst purchaseCakeSuccess = (state, action) => {\n    const newOrder = updateObject(action.orderData, {id:action.orderId})\n    return updateObject(state, {loading:false,\n        orders: state.orders.concat(newOrder),\n        purchased:true \n    })\n}\n\nconst purchaseCakeFail = (state, action) => {\n    return updateObject(state, {loading:false})\n}\n\nconst fetchOrderStart = (state, action) => {\n    return updateObject(state,{loading:true})\n}\n\nconst fetchOrderSuccess = (state, action) => {\n    return updateObject(state, { orders: action.orders,\n        loading: false\n        })\n}\n\nconst fetchOrderFail = (state, action) => {\n    return updateObject(state, {loading:false})\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action)\n        case actionTypes.PURCHASE_CAKE_START: return purchaseCakeStart(state, action)\n        case actionTypes.PURCHASE_CAKE_SUCCESS: return purchaseCakeSuccess(state, action)\n        case actionTypes.PURCHASE_CAKE_FAIL: return purchaseCakeFail(state, action)\n        case actionTypes.FETCH_ORDERS_START: return fetchOrderStart(state, action)\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrderSuccess(state, action)\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrderFail(state, action)\n        default: return state\n    }\n}\n\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\nimport {updateObject} from '../utility'\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {error: null, loading: true})\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false\n    })\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    })\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null,\n        userId: null\n    })\n}\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, {\n        authRedirectPath: action.path\n    })\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START : return authStart(state, action)\n        case actionTypes.AUTH_SUCCESS : return authSuccess(state, action)\n        case actionTypes.AUTH_FAIL : return authFail(state, action)\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action)\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action)\n        default:\n            return state\n    }\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport cakeBuilderReducer from './store/reducers/cakeBuilder'\nimport orderReducer from './store/reducers/order'\nimport authReducer from './store/reducers/auth'\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  cakeBuilder:cakeBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n))\n\nconst app = (\n  <Provider store={store}>\n   <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}